[
    {
        "domainName": "BR_CPFCNPJ",
        "classifierName": "BR_CPFCNPJ_META",
        "description": "CPF CNPJ Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue": "^(?i)(?!.*(id|pk|fk|ecnr|passaporte|bnf|cntrl|tmnrdoc|baseente|cgcscr|bpor|cgcod|bsente|cgc..est|cfenvcpfbl|cpfnf|ctbs)).*((cod|des)(?!d)_pessoa|cpf|cnpj|cgc|(doc(umen)?(to)?.*fiscal)).*$",
                    "parentValue":"",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_CPFCNPJ",
        "classifierName": "BR_CPFCNPJ_DATA",
        "description": "CPF CNPJ Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"^\\b((\\d{2}\\.?\\d{3}\\.?\\d{3}\/?\\d{4}\\-?\\d{2})|(\\d{3}\\.?\\d{3}\\.?\\d{3}(?:\\-|\\.)?\\d{2}))\\b(?!\\d|-|\\/|\\.)$",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                    }
                ],
            "rejectStrength": 0.0
        }
    },    
    {
        "domainName": "BR_TELEFONE",
        "classifierName": "BR_TELEFONE_META",
        "description": "Telefone Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue": "^(?i)(?!.*(pk|fk|id|ddd|data|cancel|motivo|limite|tela|path|hora|autent|tentativa|parcela|tentativas|aux|controle|tipo)).*((nr|num(ero)?)?.*(tel(fone)?|celular|num.*cel|(?<![a-z])cel)).*$",
                    "parentValue":"",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_TELEFONE",
        "classifierName": "BR_TELEFONE_DATA",
        "description": "Telefone Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"^(\\+?55 ?)?\\(?(1[1-9]|2[1,2,4,7,8]|3[1-5,7,8]|4[1-9]|5[1,3,4,5]|6[1-9]|7[1,3,4,5,7,9]|8[1-9]|9[1-9])?\\)?[ -]?([2,3]\\d{3}-?\\d{4}|4[0-9][1-9]\\d-?\\d{4}|5[0-9]\\d{2}-?\\d{4}|9\\d{4}-?\\d{4}|7[0,7,8,9]\\d{2}-?\\d{4})$",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_DATA_NASC",
        "classifierName": "BR_DATA_NASC_META",
        "description": "Data Nascimento Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)data?_nasci?m?(?:ento)?.*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_DATA_NASC",
        "classifierName": "BR_DATA_NASC_DATA",
        "description": "Data Nascimento Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"^(?:(?:31(\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_EMAIL",
        "classifierName": "BR_EMAIL_META",
        "description": "E-mail Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)(?!.*(pk|fk|id|tentativa|autentica|invalid|expire|sent|cmtp|dt|hr|tx|dat(a|e)?)).*(email).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_EMAIL",
        "classifierName": "BR_EMAIL_DATA",
        "description": "E-mail Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"^(([^<>()\\[\\]\\.,;:\\s@]+(\\.[^<>()\\[\\]\\.,;:\\s@]+)*)|((?:^ ).+))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))(?!\\d|-|\/|\\.)$",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_BAIRRO",
        "classifierName": "BR_BAIRRO_DATA",
        "description": "Bairro Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"^(j(ar)?d(im)?|vi?la?) (([a-zàâãéêíóôõúçÇ]* ?){1,2})( [0-9]+)?$",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_BAIRRO",
        "classifierName": "BR_BAIRRO_META",
        "description": "Bairro Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)(?!.*(id|pk|fk|log|dt)).*(bai(rro)?).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_UF",
        "classifierName": "BR_UF_META",
        "description": "UF Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)(?!.*(civil|ativo|id|pk|fk|log|dt)).*((?<![a-zA-Z])(estado|uf))(?![a-zA-Z]).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_UF",
        "classifierName": "BR_UF_DATA",
        "description": "UF Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"^(AC|AL|AP|AM|BA|CE|DF|ES|GO|MA|MT|MS|MG|PA|PB|PR|PE|PI|RJ|RN|RS|RO|RR|SC|SP|SE|TO)$",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_UF",
        "classifierName": "BR_UF_FULL_DATA",
        "description": "UF Full Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"/^(Acre|Alagoas|Amap(?:á|a)|Amazonas|Bahia|Cear(?:a|á)|Distrito Federal|Esp(?:í|i)rito Santo|Goi(?:á|a)s|Maranh(?:ã|a)o|Mato Grosso(?: do Sul)?|Minas Gerais|Paran(?:a|á)|Para(?:í|i)ba|Par(?:a|á)|Pernambuco|Piau(í|i)|Rio Grande do Norte|Rio Grande do Sul|Rond(?:ô|o)nia|Roraima|Santa Catarina|Sergipe|Tocantins)$",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_CEP",
        "classifierName": "BR_CEP_DATA",
        "description": "CEP Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"\b([0-9]{5})-([0-9]{3})\b",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_CEP",
        "classifierName": "BR_CEP_META",
        "description": "CEP Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)(?!.*(id|pk|fk|log)).*((?<!indi)cep|cod(igo)?.*postal).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_CIDADE",
        "classifierName": "BR_CIDADE_META",
        "description": "Cidade Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)(?!.*((?<!c)id(?!ade)|(^lcid$)|(^iocid$)|pk|fk|periodi|multipli)).*(cid(ade)?).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_EMPRESA",
        "classifierName": "BR_EMPRESA_META",
        "description": "Empresa Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)(?!.*(id|pk|fk|log|dt)).*(razao.*social|nome.*fantasia|nome?.*empre?sa?).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_ENDERECO",
        "classifierName": "BR_ENDERECO_DATA",
        "description": "Endereco Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"(?i)^(via(?:duto)?|vd?\\.|av(?:\\.|enida)|r(?:\\.|ua)|pr(?:\\.|a[çc](?:a|inha))|pr[çc]\\.|rod(?:\\.|ovia)|al(?:\\.|ameda)|travessa|tv?\\.|estr(?:\\.|ada)|largo|lgo\\.|beco|bc\\.|pass(?:\\.|arela)|parq(?:\\.|ue)|pq\\.|p[áa]tio|pt\\.|quadra|qd\\.|cal[çc](?:\\.|ad[ãa]o?)|cal\\.|viela|vl\\.|ladeira|ld\\.|corr(?:\\.|edor)|acesso|acs\\.|jardim|jd\\.)\b\\s+(.*?),\\s+((?:km\\s?)?\\d+|s\/?n)\\s+-\\s+\b(.*)\\b,\\s\b(.*)\b\\s-\\s(AC|AL|AM|AP|BA|CE|DF|ES|GO|MA|MG|MS|MT|PA|PB|PE|PI|PR|RJ|RN|RO|RR|RS|SC|SE|SP|TO),\\s(?:CEP:\\s)?(\\d{5}-\\d{3})(?:,?\\sBrasil)?$",
                    "checksumType":"NONE",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_ENDERECO",
        "classifierName": "BR_ENDERECO_META",
        "description": "Endereco Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)(?!.*(pk|fk|cod|id|site|agend|rend|codpen|pendprop|seqpen|tipo|rendmes|cidade|estado|bairro|numero|vendedor|cdoutr|uf|depend|agenda|arquivo|venda|endt|endest|pend(encia)|atend|cetp|cltp|clnr|cpend|vlr|lprendmes|vend|pend)).*(end|ender|endereco).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_PRIMEIRONOME",
        "classifierName": "BR_NOME_META",
        "description": "Nome Meta Level",
        "frameworkId": 3,
        "classifierConfiguration": {
            "paths": [
                {
                    "matchType": "REGEX",
                    "fieldValue":"^(?i)(?!.*(atributo|log|apcl|funcao|arquivo|banco|campo|ano|mes|tela|agencia|pagina|proc|param|propried|cargo|empresa|emprs|coluna|bnf|campanha|plataforma|perfil|usnomeusu|sobre|seq|tabela|id|fk|pk)).*(primeiro)?.*n(o)?me?_?(?!rot).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                }
            ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_PRIMEIRONOME",
        "classifierName": "BR_NOME_M_DATA",
        "description": "Nome Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"(?i)^(?:(?!\\b(?:via(?:duto)?|vd?\\.|av(?:\\.|enida)|r(?:\\.|ua)|pr(?:\\.|a[çc](?:a|inha))|pr[çc]\\.|rod(?:\\.|ovia)|al(?:\\.|ameda)|travessa|tv?\\.|estr(?:\\.|ada)|largo|lgo\\.|beco|bc\\.|pass(?:\\.|arela)|parq(?:\\.|ue)|pq\\.|p[áa]tio|pt\\.|quadra|qd\\.|cal[çc](?:\\.|ad[ãa]o?)|cal\\.|viela|vl\\.|ladeira|ld\\.|corr(?:\\.|edor)|acesso|acs\\.|jardim|jd\\.)\b)).*\b(Arthur|Benjamin|Bernardo|Daniel|Davi|Lorenzo|Enzo|Felipe|Gabriel|Gustavo|Heitor|Jo(?:ã|a)o|Jos(?:é|e)|Lucas|Marc(?:us|os?)|Matheus|Miguel|Noah|Pedro|Ra(?:f|ph)ael|Rodrigo|Samuel|Th(?:é|e)o)\\b.*$",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_PRIMEIRONOME",
        "classifierName": "BR_NOME_F_DATA",
        "description": "Nome Full Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"(?i)^(?:(?!\\b(?:via(?:duto)?|vd?\\.|av(?:\\.|enida)|r(?:\\.|ua)|pr(?:\\.|a[çc](?:a|inha))|pr[çc]\\.|rod(?:\\.|ovia)|al(?:\\.|ameda)|travessa|tv?\\.|estr(?:\\.|ada)|largo|lgo\\.|beco|bc\\.|pass(?:\\.|arela)|parq(?:\\.|ue)|pq\\.|p[áa]tio|pt\\.|quadra|qd\\.|cal[çc](?:\\.|ad[ãa]o?)|cal\\.|viela|vl\\.|ladeira|ld\\.|corr(?:\\.|edor)|acesso|acs\\.|jardim|jd\\.)\\b)).*\\b(Alice|Ann?a|Bruna|Clara|Beatriz|Clara|Eduarda|Gabriela|Giovann?a|Helena|Isabella|J(?:ú|u)lia|Lara|Laura|Lu(?:í|i)za|L(?:í|i)via|Manuela|Maria|Mariana|Ol(?:í|i)via|Patr(?:í|i)cia|Rafaela|So(?:f|ph)ia|Valentina|(?:Y|I)asmin)\\b.*$",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_ULTIMONOME",
        "classifierName": "BR_SOBRENOME_META",
        "description": "Sobrenome Meta Level",
        "frameworkId": 3,
        "classifierConfiguration":  {
            "paths": [
                {
                    "matchType":"REGEX",
                    "fieldValue":"^(?i)(?!.*(atributo|log|dt|apcl|funcao|arquivo|banco|campo|ano|mes|tela|agencia|pagina|proc|param|propried|cargo|empresa|coluna|bnf|campanha|plataforma|perfil|usnomeusu|seq|tabela|id|fk|pk)).*(sobre|ultimo.*)n(o)?me(?!rot).*$",
                    "caseSensitive":false,
                    "matchStrength":0.7,
                    "allowPartialMatch":false
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "domainName": "BR_RG",
        "classifierName": "BR_RG_DATA",
        "description": "BR RG Data Level",
        "frameworkId": 1,
        "classifierConfiguration": {
            "dataPatterns": [
                {
                    "regex":"^(\\d{2}\\x2E\\d{3}\\x2E\\d{3}[-]\\d{1})$|^(\\d{2}\\x2E\\d{3}\\x2E\\d{3})$",
                    "caseSensitive":false,
                    "matchStrength":0.67,
                    "allowPartialMatch":true
                    }
                ],
            "rejectStrength": 0.0
        }
    },
    {
        "classifierName": "BR_CEP_Type",
        "frameworkId": 4,
        "domainName": "BR_CEP",
        "description": "CEP Type",
        "classifierConfiguration": {
          "allowedTypes": [
            {
              "typeName": "String",
              "minimumLength": 9
            },
            {
              "typeName": "Number",
              "minimumLength": 8
            }
          ],
          "matchAutoIncrementingColumn": true
        }
      }
]